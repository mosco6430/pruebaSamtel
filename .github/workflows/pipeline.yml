name: CI/CD Sample App

on:
  push:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/sample-app

jobs:

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker:
    name: Docker Build & Push
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        run: |
          docker build -t $IMAGE_NAME:${{ github.run_number }} .
          docker push $IMAGE_NAME:${{ github.run_number }}

  bash-parallel:
    name: Print Hola Mundo in Parallel
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [1,2,3,4,5,6,7,8,9,10]
    steps:
      - run: echo "Hola Mundo desde job ${{ matrix.job }}"

  create-files:
    name: Crear archivos y mostrar contenido
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir logs
          for i in {1..10}; do
            date > logs/file_$i.txt
          done
          cat logs/*

  deploy:
    name: Deploy to EKS
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name sample-cluster
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml
